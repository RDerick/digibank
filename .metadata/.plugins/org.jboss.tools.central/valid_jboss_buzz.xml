<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>A upside-down approach to GCC optimizations</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/_cAME_Xjn9M/" /><category term="Performance" /><category term="gcc" /><author><name>Andrew MacLeod</name></author><id>https://developers.redhat.com/blog/?p=635457</id><updated>2019-10-11T07:00:09Z</updated><published>2019-10-11T07:00:09Z</published><content type="html">&lt;p&gt;Many traditional optimizations in the compiler work from a top-down approach, which starts at the beginning of the program and works toward the bottom. This allows the optimization to see the definition of something before any uses of it, which simplifies most evaluations. It’s also the natural way we process things. In this article, we&amp;#8217;ll look at a different approach and a new project called &lt;a href="https://gcc.gnu.org/wiki/AndrewMacLeod/ProjectRanger"&gt;Ranger&lt;/a&gt;, which attempts to turn this problem upside down.&lt;br /&gt; &lt;span id="more-635457"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Let’s first look at the Value Range Propagation (VRP) optimization pass in GCC. We process statements to determine what kinds of ranges we can calculate and perform some optimizations based on those results:&lt;/p&gt; &lt;pre&gt;func (unsigned b) { unsigned A; if (B &amp;#60; 10) { A = B + 10; if (A &amp;#62; 20) dead_call (); } } &lt;/pre&gt; &lt;p&gt;First, the statement &lt;code&gt;if (B &amp;#60; 10)&lt;/code&gt; is examined. Without knowing anything else about B, we know that, if the condition is true, B must be in the range [0..9] for all uses of B in the then block.&lt;/p&gt; &lt;p&gt;Next, we process the &lt;code&gt;A = B + 10&lt;/code&gt; statement. We know the range for B, so it is now easy to determine that A must have the range of B + 10, which evaluates to [10..19].&lt;/p&gt; &lt;p&gt;When the next statement is considered, &lt;code&gt;if (A &amp;#62; 20)&lt;/code&gt;, we have calculated that A is in the range [10..19] and thus the comparison of (A &amp;#62; 20) must always be false. This allows the pass to remove the call to &lt;code&gt;dead_call()&lt;/code&gt;, knowing it can never be called.&lt;/p&gt; &lt;h2&gt;When the top-down approach fails&lt;/h2&gt; &lt;p&gt;One problem with this top-down approach is that the order in which things are encountered can affect the results. Consider, for instance, if our code snippet were rearranged:&lt;/p&gt; &lt;pre&gt;A = B + 10; if (B &amp;#60; 10) { if (A &amp;#62; 20) dead_call (); } &lt;/pre&gt; &lt;p&gt;This program is functionally identical; but, with the top-down approach, we now see the &lt;code&gt;A = B + 10&lt;/code&gt; statement earlier, which is before we know anything useful about the range of B. This means we learn little of use about the range of A at this assignment.&lt;/p&gt; &lt;p&gt;Next, we learn that t range for B in the then block is [0..9], just like last time.&lt;/p&gt; &lt;p&gt;When we finally see the expression &lt;code&gt;if (A &amp;#62; 20)&lt;/code&gt;, we don&amp;#8217;t know enough about the range of A this time to be sure it is safe to eliminate the call to &lt;code&gt;dead_call()&lt;/code&gt;. Moving the assignment statement earlier in the program has caused us to miss this optimization.&lt;/p&gt; &lt;p&gt;This is one reason why an optimization can sometimes optimize your code and other times not; the order in which statements are seen can affect the results.&lt;/p&gt; &lt;h2&gt;Other issues&lt;/h2&gt; &lt;p&gt;Another issue with the top-down approach is that we have to calculate a range for everything we see because we don&amp;#8217;t know if we will need it later or not. In the second example, we never actually needed the range for B, so it was a waste of time to calculate and carry it around. Such is frequently the case.&lt;/p&gt; &lt;p&gt;It can also be prohibitive to always calculate and carry all possible information. To help alleviate this burden, we develop &amp;#8220;heuristics,&amp;#8221; which are basically educated guesses at what might be important. We calculate only the data we think we will need, and if we get it right, all is good!  If we guess wrong, well, that is another missed optimization. Bug reports sometimes result in juggling heuristics to try to fix the problem, and sometimes cause another bug report to surface, because now we missed something else!&lt;/p&gt; &lt;h2&gt;Reformulating the problem&lt;/h2&gt; &lt;p&gt;Over the past 3 years, we have been working on a new compiler project at Red Hat called Ranger. It is an attempt to turn this problem upside down for VRP, and instead of using heuristics or always calculating ranges, we do it &lt;em&gt;on demand&lt;/em&gt;. In this approach, we defer any calculations until we actually need a range and teach the compiler how to look back through the statements feeding the expression to come up with the answer. This way we only do work that is required to get the values we need, and nothing extra.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s look at our first example again:&lt;/p&gt; &lt;pre&gt;if (B &amp;#60; 10) { A = B + 10; if (A &amp;#62; 20) dead_call (); } &lt;/pre&gt; &lt;p&gt;We know the first conditional &lt;code&gt;if (B &amp;#60; 10)&lt;/code&gt; could be removed if B has a range of less than 10, so a query is made of what the range of B is. We can&amp;#8217;t determine anything about B, so we do nothing with it.&lt;/p&gt; &lt;p&gt;Eventually, we look at &lt;code&gt;if (A &amp;#62; 20)&lt;/code&gt;, and:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Query the range of A.&lt;/li&gt; &lt;li&gt;Then, Ranger looks at the definition of A and sees it is defined as &lt;code&gt;B + 10&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;It continues by querying the range of B at that specific point.&lt;/li&gt; &lt;li&gt;Ranger then looks back and discovers that this code is gated by &lt;code&gt;if (B &amp;#60; 10)&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;That means we know the range of B is [0..9].&lt;/li&gt; &lt;li&gt;We return to the definition of A and, as in the first example, determine that A has a range of [10..19].&lt;/li&gt; &lt;li&gt;Finally, we return back to &lt;code&gt;if (A &amp;#62; 20)&lt;/code&gt;, reporting the range [10..19] and again determine the call can be removed.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Eliminating ordering issues&lt;/h2&gt; &lt;p&gt;An advantage Ranger has is that it doesn&amp;#8217;t matter how we got to the &lt;code&gt;if (A &amp;#62; 20)&lt;/code&gt; statement. Ranger will still come up with the same answer because it looks back through the instructions that it needs and does not need, depending on the order they are encountered.&lt;/p&gt; &lt;p&gt;Now, let&amp;#8217;s revisit the second sample:&lt;/p&gt; &lt;pre&gt;a = b + 10; if (b &amp;#60; 10) { if (a &amp;#62; 20) dead_call (); } &lt;/pre&gt; &lt;p&gt;We&amp;#8217;ll jump straight to the &lt;code&gt;if (A &amp;#62; 20)&lt;/code&gt; statement again, and:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Ask the Ranger for the range of A.&lt;/li&gt; &lt;li&gt;With the ability to look backward, it finds &lt;code&gt;A = B + 10&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Along the way back to that defining statement, it also sees this block is gated by &lt;code&gt;if (B &amp;#60; 10)&lt;/code&gt;, so it also knows B = [0..9] on this path.&lt;/li&gt; &lt;li&gt;We are only asking about the specific value of A at this point in the program, so we can evaluate A as &amp;#8220;B + 10&amp;#8221;, using this gated value of B. This allows us to use B as  [0..9] and effectively &lt;em&gt;re-evaluate&lt;/em&gt; A in this block.&lt;/li&gt; &lt;li&gt;We again calculate that A has a range of [10..19].&lt;/li&gt; &lt;li&gt;This allows us to remove the call to &lt;code&gt;dead_call()&lt;/code&gt;, just like before.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Moving to production&lt;/h2&gt; &lt;p&gt;This simple example shows how we are attempting to remove the need for the top-down analysis order, which helps eliminate the need for heuristics and should result in more consistent optimization results.&lt;/p&gt; &lt;p&gt;Much of the research that has gone into this project has been to control the performance of the on-demand analysis, so that it is not more expensive than the much simpler top-down approach. The Ranger only does work that is actually needed, so we also see some significant time savings in optimization passes that don&amp;#8217;t need very many ranges. We hope to extend this approach in the future to other optimizations.&lt;/p&gt; &lt;p&gt;This work is live in a current GCC development branch and is now capable of building an entire Fedora distribution.  We plan to integrate it with mainstream GCC in the next release, GCC 11.&lt;/p&gt; &lt;p&gt;If you are interested in more details, you can see documentation about the Ranger project, its approach, and our results on the &lt;a href="https://gcc.gnu.org/wiki/AndrewMacLeod/ProjectRanger"&gt;GCC wiki&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F11%2Fa-upside-down-approach-to-gcc-optimizations%2F&amp;#38;linkname=A%20upside-down%20approach%20to%20GCC%20optimizations" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F11%2Fa-upside-down-approach-to-gcc-optimizations%2F&amp;#38;linkname=A%20upside-down%20approach%20to%20GCC%20optimizations" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F11%2Fa-upside-down-approach-to-gcc-optimizations%2F&amp;#38;linkname=A%20upside-down%20approach%20to%20GCC%20optimizations" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F11%2Fa-upside-down-approach-to-gcc-optimizations%2F&amp;#38;linkname=A%20upside-down%20approach%20to%20GCC%20optimizations" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F11%2Fa-upside-down-approach-to-gcc-optimizations%2F&amp;#38;linkname=A%20upside-down%20approach%20to%20GCC%20optimizations" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F11%2Fa-upside-down-approach-to-gcc-optimizations%2F&amp;#38;linkname=A%20upside-down%20approach%20to%20GCC%20optimizations" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F11%2Fa-upside-down-approach-to-gcc-optimizations%2F&amp;#38;linkname=A%20upside-down%20approach%20to%20GCC%20optimizations" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F11%2Fa-upside-down-approach-to-gcc-optimizations%2F&amp;#038;title=A%20upside-down%20approach%20to%20GCC%20optimizations" data-a2a-url="https://developers.redhat.com/blog/2019/10/11/a-upside-down-approach-to-gcc-optimizations/" data-a2a-title="A upside-down approach to GCC optimizations"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/11/a-upside-down-approach-to-gcc-optimizations/"&gt;A upside-down approach to GCC optimizations&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/_cAME_Xjn9M" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Many traditional optimizations in the compiler work from a top-down approach, which starts at the beginning of the program and works toward the bottom. This allows the optimization to see the definition of something before any uses of it, which simplifies most evaluations. It’s also the natural way we process things. In this article, we&amp;#8217;ll [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/11/a-upside-down-approach-to-gcc-optimizations/"&gt;A upside-down approach to GCC optimizations&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">635457</post-id><dc:creator>Andrew MacLeod</dc:creator><dc:date>2019-10-11T07:00:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/11/a-upside-down-approach-to-gcc-optimizations/</feedburner:origLink></entry><entry><title>Introducing Keycloak.X</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Eavu8-aat5A/keycloak-x.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Stian Thorgersen</name></author><id>searchisko:content:id:jbossorg_blog-introducing_keycloak_x</id><updated>2019-10-11T00:00:00Z</updated><published>2019-10-11T00:00:00Z</published><content type="html">&lt;h2&gt;What are we trying to improve?&lt;/h2&gt; &lt;p&gt;The first stable release of Keycloak was way back in 2014. As always when building software there are things that could have been done better.&lt;/p&gt; &lt;p&gt;With Keycloak.X we are aiming to introduce some bigger changes to make Keycloak leaner, easier and more future-proof.&lt;/p&gt; &lt;p&gt;A few goals with Keycloak.X are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Make it easier to configure&lt;/li&gt; &lt;li&gt;Make it easier to scale, including multi-site support&lt;/li&gt; &lt;li&gt;Make it easier to extend&lt;/li&gt; &lt;li&gt;Reduce startup time and memory footprint&lt;/li&gt; &lt;li&gt;Support zero-downtime upgrades&lt;/li&gt; &lt;li&gt;Support continuous delivery&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This work will be broken into several parts:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A new and improved storage layer&lt;/li&gt; &lt;li&gt;A new distribution powered by &lt;a href="https://quarkus.io"&gt;Quarkus&lt;/a&gt;&lt;/li&gt; &lt;li&gt;A new approach to custom providers&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Distribution&lt;/h2&gt; &lt;p&gt;Building a new distribution powered by Quarkus will allow us to significantly reduce startup time and memory footprint.&lt;/p&gt; &lt;p&gt;We will be able to create a leaner distribution in terms of size and dependencies as well. Reducing dependencies will further reduce the number of CVEs in third-party libraries.&lt;/p&gt; &lt;p&gt;We are also planning to introduce a proper Keycloak configuration file, where we will document directly how to configure everything related to Keycloak. In the current WildFly based distribution the configuration file is very complex as it contains everything to configure the underlying application server, and more often than not it is required to refer to WildFly documentation to figure out how to configure things properly.&lt;/p&gt; &lt;h2&gt;Storage&lt;/h2&gt; &lt;p&gt;The current storage layer is complex, especially when deployed to multiple-sites. It has a number of scalability issues like the number of realms and clients. Sessions are only kept in-memory, which can be good for performance, but not so great for scaling when you consider a large portion of sessions are idle and unused most of the time.&lt;/p&gt; &lt;p&gt;Exactly what the new storage layer will look like is still to be decided, but we know for sure that we want to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Reduce complexity with regards to configuring, SPIs and schema&lt;/li&gt; &lt;li&gt;Support zero downtime upgrades&lt;/li&gt; &lt;li&gt;Make sure we can scale to large number of realms and clients&lt;/li&gt; &lt;li&gt;Make sure we can scale to millions of sessions, including support for persisting and passivation&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Providers&lt;/h2&gt; &lt;p&gt;Providers today have some issues that we would like to address. Including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Deprecation and versioned approach to SPIs - breaking changes to APIs are horrible in a continuous delivery world&lt;/li&gt; &lt;li&gt;Polyglot - not everyone is a JavaEE developer, let's embrace that and allow more options when it comes to extending Keycloak&lt;/li&gt; &lt;li&gt;Sand-boxing - allow safe customizations in a SaaS world&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Continuous Delivery&lt;/h2&gt; &lt;p&gt;We are aiming to make it easier to use Keycloak in a continuous delivery world. This should consider Keycloak upgrades, custom providers as well as configuration.&lt;/p&gt; &lt;p&gt;Keycloak upgrades should be seamless and there should not be any breaking changes, rather deprecation periods.&lt;/p&gt; &lt;p&gt;It should be possible to more easily manage and reproduce the config of Keycloak, including realm config, in different environments. A developer should be able to try some config changes in a dev environment, push to a test environment, before finally making the changes live in a production environment.&lt;/p&gt; &lt;h2&gt;Contributing&lt;/h2&gt; &lt;p&gt;We would love help from the community on Keycloak.X. You can contribute with code, with discussions or simply just trying it out and giving us feedback.&lt;/p&gt; &lt;h2&gt;Migration to Keycloak.X&lt;/h2&gt; &lt;p&gt;There will be a migration required to Keycloak.X. In fact there will be multiple migrations required as everything mentioned earlier will not be ready in one go.&lt;/p&gt; &lt;p&gt;It is an aim to make this migration as simple and painless as possible though.&lt;/p&gt; &lt;h2&gt;Timing&lt;/h2&gt; &lt;p&gt;We are staring with the Quarkus powered distribution. The aim is to have a fully functional stable distribution by the end of 2019, but we already have &lt;a href="https://github.com/keycloak/keycloak/tree/master/quarkus"&gt;a prototype&lt;/a&gt; you can try out and contribute to.&lt;/p&gt; &lt;p&gt;In 2020 we are aiming to work on both the storage layer and providers. Hopefully, by the end of 2020 we will have most if not everything sorted out.&lt;/p&gt; &lt;p&gt;We will continue to support the current Keycloak version in parallel with Keycloak.X and will give everyone plenty of time to do the migration before we eventually will pull the plug on the old.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Eavu8-aat5A" height="1" width="1" alt=""/&gt;</content><summary>What are we trying to improve? The first stable release of Keycloak was way back in 2014. As always when building software there are things that could have been done better. With Keycloak.X we are aiming to introduce some bigger changes to make Keycloak leaner, easier and more future-proof. A few goals with Keycloak.X are: Make it easier to configure Make it easier to scale, including multi-site s...</summary><dc:creator>Stian Thorgersen</dc:creator><dc:date>2019-10-11T00:00:00Z</dc:date><feedburner:origLink>https://www.keycloak.org/2019/10/keycloak-x.html</feedburner:origLink></entry><entry><title>Planned Security Features for WildFly 19</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OqELkqeEJPs/planned-security-features-for-wildfly-19" /><category term="feed_group_name_aggregated" scheme="searchisko:content:tags" /><category term="feed_name_fjuma" scheme="searchisko:content:tags" /><category term="new features" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><category term="wildfly elytron" scheme="searchisko:content:tags" /><category term="wildfly19" scheme="searchisko:content:tags" /><author><name>Farah Juma</name></author><id>searchisko:content:id:jbossorg_blog-planned_security_features_for_wildfly_19</id><updated>2019-10-10T22:15:37Z</updated><published>2019-10-10T22:15:37Z</published><content type="html">&lt;!-- [DocumentBodyStart:c44f36aa-86b3-4928-9cbe-227fdb232c69] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Since the feature development phase for WildFly 19 has now started, we wanted to highlight the security features that we are planning to work on for this release.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Planned Features&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFLY-12609" rel="nofollow"&gt;WFLY-12609&lt;/a&gt; &lt;strong&gt;Add support for MicroProfile JWT 1.1&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="padding-left: 30px;"&gt;Details on what is being planned for this feature can be found &lt;a class="jive-link-external-small" href="https://github.com/wildfly/wildfly-proposals/pull/248" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFCORE-4150" rel="nofollow"&gt;WFCORE-4150&lt;/a&gt; &lt;strong&gt;Support automatically adding and updating credentials in a credential store&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="padding-left: 30px;"&gt;Instead of needing to first add a credential to a credential store in order to reference it from a &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt;, WildFly 19 will add the ability to automatically add a credential to a previously defined credential store. Check out this &lt;a class="jive-link-blog-small" data-containerId="5158" data-containerType="37" data-objectId="6323" data-objectType="38" href="https://developer.jboss.org/people/fjuma/blog/2019/09/05/automatic-updates-of-credential-stores"&gt;blog post&lt;/a&gt; for an introduction to this new feature.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px; padding-left: 30px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFLY-11697" rel="nofollow"&gt;WFLY-11697&lt;/a&gt; &lt;strong&gt;Web Services integration with WildFly Elytron&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="padding-left: 30px;"&gt;The WildFly Elytron integration added a new API and configuration file to configure client side security for outgoing calls. This feature request is to increase the integration for web services clients. For an introduction to this new feature, take a look at this &lt;a class="jive-link-external-small" href="https://dvilkola.wordpress.com/2019/09/06/web-services-client-integration-with-wildfly-elytron/" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px; padding-left: 30px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFLY-11868" rel="nofollow"&gt;WFLY-11868&lt;/a&gt; &lt;strong&gt;RESTEasy integration with WildFly Elytron&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="padding-left: 30px;"&gt;This feature request looks at integration for RESTEasy clients. More information about this feature can be found &lt;a class="jive-link-external-small" href="https://github.com/wildfly/wildfly-proposals/pull/189" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px; padding-left: 30px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFCORE-4484" rel="nofollow"&gt;WFCORE-4484&lt;/a&gt; &lt;strong&gt;Support SSH authentication for Git persistence&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="padding-left: 30px;"&gt;This new feature will make it possible to use SSH authentication via Elytron when using Git to manage and persist your WildFly configuration file. More details are available &lt;a class="jive-link-external-small" href="https://github.com/wildfly/wildfly-proposals/pull/249" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px; padding-left: 30px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFLY-12661" rel="nofollow"&gt;WFLY-12661&lt;/a&gt; &lt;strong&gt;Make the IP address of a remote EJB client accessible to the developer from within app authentication code&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFCORE-4172" rel="nofollow"&gt;WFCORE-4172&lt;/a&gt; &lt;strong&gt;Add support for TLS 1.3&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFLY-7232" rel="nofollow"&gt;WFLY-7232&lt;/a&gt; &lt;strong&gt;Add support for Elytron provided SSLContexts in Artemis&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFCORE-4314" rel="nofollow"&gt;WFCORE-4314&lt;/a&gt; &lt;strong&gt;Enhance keystore CLI commands&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="padding-left: 30px;"&gt;This feature request looks at allowing users to configure how much output should appear when invoking certain operations on Elytron &lt;span style="font-family: 'courier new', courier;"&gt;key-stores&lt;/span&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Feedback&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As usual, please keep in mind that this blog post is a summary of our general plans and not a guarantee that each of these features will be merged. However, this blog post does give an indication of our team&amp;#8217;s current priorities. If any of these features are a priority for you, please let us know. Please also let us know if there are any security features that are missing that you would like to see prioritized as we can take this kind of feedback into account for future releases.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:c44f36aa-86b3-4928-9cbe-227fdb232c69] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OqELkqeEJPs" height="1" width="1" alt=""/&gt;</content><summary>Since the feature development phase for WildFly 19 has now started, we wanted to highlight the security features that we are planning to work on for this release.   Planned Features   WFLY-12609 Add support for MicroProfile JWT 1.1 Details on what is being planned for this feature can be found here.   WFCORE-4150 Support automatically adding and updating credentials in a credential store Instead o...</summary><dc:creator>Farah Juma</dc:creator><dc:date>2019-10-10T22:15:37Z</dc:date><feedburner:origLink>https://developer.jboss.org/people/fjuma/blog/2019/10/10/planned-security-features-for-wildfly-19</feedburner:origLink></entry><entry><title>Red Hat strengthens commitment to open source tooling, joins new working group</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6f_qX9_PIbg/" /><category term="Community" /><category term="Eclipse Cloud Development project group" /><category term="Eclipse Foundation" /><author><name>Brad Micklea</name></author><id>https://developers.redhat.com/blog/?p=638417</id><updated>2019-10-10T07:05:55Z</updated><published>2019-10-10T07:05:55Z</published><content type="html">&lt;p&gt;The Eclipse Cloud Development (ECD) project group started at the Eclipse Foundation in 2016 with Eclipse Che and Orion open source coding tools. Each year since has seen greater interest and new projects added, including Theia, CodeWind, Dirigible, Sprotty, and now Che4z. As the ECD has grown to become a center of open source cloud-native development tooling, user and vendor interest has also increased; users of Eclipse Cloud Development projects now number well over 500k, and several other vendors have joined Red Hat to push tooling forward in this critical market. This has been fantastic, as it has driven more contributions and collaboration from the community.&lt;/p&gt; &lt;p&gt;Despite this success, there was something missing: coordination and collaboration on a broader strategy for cloud-development tooling. To address this, Red Hat and several other member organizations at the Eclipse Foundation have come together to create &lt;span style="font-weight: 400;"&gt;a vendor-neutral collaborative working group &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;to drive the evolution and broad adoption of standards and compelling new projects for cloud development tools.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;On September 12th, 2019, participating members of the newly formed Eclipse Cloud Development Working Group (ECD WG) met for the first time to discuss the activities they plan to engage in going forward in order to &lt;span style="font-weight: 400;"&gt;drive the evolution and broad adoption of open source cloud-native developer tools, including language support, remote debugging tools, IDE and DevOps toolchain extensions, plugin marketplaces, and a richer definition of what a cloud-native developer workspace should be&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;To learn more about the ECD WG, stay informed, or get involved, start by joining the &lt;a href="https://accounts.eclipse.org/mailing-list/ecd-tools-wg"&gt;&lt;span style="font-weight: 400;"&gt;ECD Tools&lt;/span&gt;&lt;/a&gt; mailing list. You can also view the ECD WG &lt;a href="https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php"&gt;Charter&lt;/a&gt; and &lt;a href="https://www.eclipse.org/org/workinggroups/wpga/eclipse_cloud_development_tools_participation_agreement.pdf"&gt;ECD WG Participation Agreement (WPGA)&lt;/a&gt;, or email &lt;a href="mailto:membership@eclipse.org"&gt;membership@eclipse.org&lt;/a&gt; with questions.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#038;title=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" data-a2a-url="https://developers.redhat.com/blog/2019/10/10/red-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group/" data-a2a-title="Red Hat strengthens commitment to open source tooling, joins new working group"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/10/red-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group/"&gt;Red Hat strengthens commitment to open source tooling, joins new working group&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6f_qX9_PIbg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The Eclipse Cloud Development (ECD) project group started at the Eclipse Foundation in 2016 with Eclipse Che and Orion open source coding tools. Each year since has seen greater interest and new projects added, including Theia, CodeWind, Dirigible, Sprotty, and now Che4z. As the ECD has grown to become a center of open source cloud-native [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/10/red-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group/"&gt;Red Hat strengthens commitment to open source tooling, joins new working group&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">638417</post-id><dc:creator>Brad Micklea</dc:creator><dc:date>2019-10-10T07:05:55Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/10/red-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group/</feedburner:origLink></entry><entry><title>How to reduce Red Hat Fuse image size</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0O-0-yOfyQs/" /><category term="Containers" /><category term="OpenShift" /><category term="Red Hat Fuse" /><category term="Universal Base Images (UBI)" /><category term="OpenShift Container Platform" /><category term="performance" /><author><name>Pramod Padmanabhan</name></author><id>https://developers.redhat.com/blog/?p=634487</id><updated>2019-10-10T07:00:38Z</updated><published>2019-10-10T07:00:38Z</published><content type="html">&lt;p&gt;&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/fuse"&gt;Red Hat Fuse&lt;/a&gt; is a leading integration platform, which is capable of solving any given problem with simple enterprise integration patterns (&lt;a href="https://www.enterpriseintegrationpatterns.com/"&gt;EIP)&lt;/a&gt;.  Over time, &lt;a href="https://developers.redhat.com/products/fuse/overview"&gt;Red Hat Fuse&lt;/a&gt; has evolved to cater to a wide range of infrastructure needs.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Fuse on &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Fuse standalone &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/spring-boot/"&gt;Spring Boot&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/videos/vimeo/130283717/"&gt;Apache Karaf&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/eap/overview"&gt;JBoss EAP&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information on each of these, check out the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_fuse/7.4/"&gt;Red Hat Fuse documentation&lt;/a&gt;. The Fuse on Red Hat OpenShift flavor uses a Fuse image that has runtime components packaged inside a Linux container image.  This article will discuss how to reduce the size of the Fuse image. The same principle can be used for other images.&lt;span id="more-634487"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Deep dive&lt;/h2&gt; &lt;p&gt;Before reducing the size, we need to first understand the basics of the Fuse container image provided by Red Hat.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s dive into the Fuse image to understand its layers at a high level.  The following diagram shows six critical layers. Note, that for the sake of simplification, I have merged layers into one logical layer. For instance, Environment and Labels are shown as one layer, which provides the Metadata information.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634547 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-1024x614.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-1024x614.png" alt="Current Fuse Image layering" width="640" height="384" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-1024x614.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-300x180.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-768x461.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215.png 1500w" sizes="(max-width: 640px) 100vw, 640px" /&gt;Figure 1: High-level image layers of Red Hat Fuse images.&lt;/p&gt; &lt;p&gt;The current version of the &lt;a href="https://access.redhat.com/containers/?tab=security#/registry.access.redhat.com/jboss-fuse-6/fis-java-openshift/images/2.0-55.1567588142"&gt;Red Hat Fuse image&lt;/a&gt; is about 171.8 MB in size. In Figure 1, we can see several layers. Each layer can be replaced by various alternatives.  That&amp;#8217;s good, but how do we know what the alternatives are?&lt;/p&gt; &lt;p style="text-align: left;"&gt;Let&amp;#8217;s take an example. Red Hat released a new &lt;a href="https://access.redhat.com/support/policy/updates/ubi"&gt;Universal Base Image&lt;/a&gt; in April, and it&amp;#8217;s generally offered in two versions:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Standard Red Hat base image — Contains a robust set of software features like yum, utils, and more.&lt;/li&gt; &lt;li&gt;Minimal Red Hat base image — This is a stripped-down version. Some alternatives are provided, such as microdnf for software installation.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The Minimal version is about half the size of the Standard Red Hat base image. This can be used as a replacement for the &amp;#8220;openjdk18-rhel7&amp;#8221; layer in a Fuse image. But this version cannot be used as is, because it does not contain JVM.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s use the headless Open JDK to keep the JRE light. The image file will look like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;FROM registry.access.redhat.com/ubi7/ubi-minimal:7.7-98 MAINTAINER Pramod Padmamabhan[ppadmana@redhat.com] &lt;/code&gt;&lt;code&gt; #Adding env details ENV FIS_JAVA_IMAGE_NAME="jboss-fuse/minimal-fuse-openshift" \ FIS_JAVA_IMAGE_VERSION="7.7-98" \ PATH=$PATH:"/usr/local/s2i" \ JAVA_DATA_DIR="/deployments/data"&lt;/code&gt; &lt;code&gt;# BASE version information LABEL name="$FIS_JAVA_IMAGE_NAME" \ version="$FIS_JAVA_IMAGE_VERSION" \ architecture="x86_64" \ summary="Platform for building and running plain Java applications (fat-jar and flat classpath)" \ com.redhat.component="jboss-fuse-x-fuse-java-openshift-container" \ io.fabric8.s2i.version.maven="3.3.3-1.el7" \ io.k8s.description="Platform for building and running plain Java applications (fat-jar and flat classpath)" \ io.k8s.display-name="Fuse Integration Services - Java" \ io.openshift.tags="builder,java" \ io.openshift.s2i.scripts-url="image:///usr/local/s2i" \ io.openshift.s2i.destination="/tmp" \ org.jboss.deployments-dir="/deployments" \ description="Fuse Base Image With minimal UBI" \&lt;/code&gt; &lt;code&gt;group="ubi-minimal" USER root ADD run-java/ /opt/run-java ADD s2i/ /usr/local/s2i ADD jolokia /opt/jolokia&lt;/code&gt; &lt;code&gt;#install OpenJDK 1.8 / use only when getting ubi minimal image RUN microdnf --enablerepo=rhel-7-server-rpms install java-1.8.0-openjdk-headless \ &amp;#38;&amp;#38; microdnf clean all \ &amp;#38;&amp;#38; echo securerandom.source=file:/dev/urandom &amp;#62;&amp;#62; /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/jre/lib/security/java.security \ &amp;#38;&amp;#38; useradd -r jboss \ &amp;#38;&amp;#38; usermod -g root -G jboss jboss \ &amp;#38;&amp;#38; chmod -R 755 /opt/run-java ; chmod -R 755 /usr/local/s2i \ &amp;#38;&amp;#38; mkdir -p /deployments/data \ &amp;#38;&amp;#38; chmod -R "g+rwX" /deployments \ &amp;#38;&amp;#38; chown -R jboss:root /deployments \ &amp;#38;&amp;#38; chmod 444 /opt/jolokia/jolokia.jar \ &amp;#38;&amp;#38; chmod 755 /opt/jolokia/jolokia-opts \ &amp;#38;&amp;#38; chmod 775 /opt/jolokia/etc \ &amp;#38;&amp;#38; chgrp root /opt/jolokia/etc &lt;/code&gt;&lt;code&gt; #fis user USER 185 CMD [ "/usr/local/s2i/run" ]&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For the complete source and library of the minimal-UBI project, refer to the &lt;a href="https://github.com/pramodmax/ubi_utils"&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Building the above will generate a Fuse image of about 130 MB. Compared to the original Fuse image size of 171.8 MB. We have reduced the image by about 40 MB in size.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;p&gt;The size reduction is good, but every custom change comes with a few drawbacks. In this case, we need to manage the S2i, Jolokia, and any other libraries or scripts we add to the UBI. Coming up, I will show how to reduce the Final-S2i image size. Until then, happy open sourcing!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#038;title=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" data-a2a-url="https://developers.redhat.com/blog/2019/10/10/how-to-reduce-red-hat-fuse-image-size/" data-a2a-title="How to reduce Red Hat Fuse image size"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/10/how-to-reduce-red-hat-fuse-image-size/"&gt;How to reduce Red Hat Fuse image size&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0O-0-yOfyQs" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat Fuse is a leading integration platform, which is capable of solving any given problem with simple enterprise integration patterns (EIP).  Over time, Red Hat Fuse has evolved to cater to a wide range of infrastructure needs. Fuse on Red Hat OpenShift Fuse standalone Spring Boot Apache Karaf JBoss EAP For more information on [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/10/how-to-reduce-red-hat-fuse-image-size/"&gt;How to reduce Red Hat Fuse image size&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">634487</post-id><dc:creator>Pramod Padmanabhan</dc:creator><dc:date>2019-10-10T07:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/10/how-to-reduce-red-hat-fuse-image-size/</feedburner:origLink></entry><entry><title>3 Pitfalls Everyone Ignores with Microservices (video)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5dnxBjwH1vM/3-pitfalls-everyone-ignores-with-microservices-video.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-3_pitfalls_everyone_ignores_with_microservices_video</id><updated>2019-10-10T05:00:02Z</updated><published>2019-10-10T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://www.slideshare.net/eschabell/devconfus-2019-3-pitfalls-everyone-ignores-with-microservices-157798701" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="3 pitfalls microservices" border="0" data-original-height="863" data-original-width="1600" height="172" src="https://1.bp.blogspot.com/-dCGR3FcZ5xY/XZxZRzdgk1I/AAAAAAAAwrM/B7qHQiSFQREmbcfeLcpP1XyAJLGXa-bdwCNcBGAsYHQ/s320/Screenshot%2B2019-10-08%2Bat%2B11.38.57.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Back in August I spent a week at DevConf.US talking about microservices, specifically about the &lt;a href="https://www.schabell.org/2019/08/devconfus-2019-3-pitfalls-everyone-ignores-with-microservices-slides.html" target="_blank"&gt;3 pitfalls everyone ignores with microservices&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;If you follow the link back to that story you'll get the slides used. &lt;br /&gt;&lt;br /&gt;While slides are often nice, there is nothing like being in the room to experience the real story telling around microservice pitfalls. Many are unable to attend specific events so it's really nice when a conference makes that extra effort to record sessions for posting online.&lt;br /&gt;&lt;br /&gt;Here's the session recording from DevConf.US 2019 in Boston University.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;Just in case you missed the abstract, here's where this session takes you.&lt;br /&gt;&lt;br /&gt;&lt;i&gt; &lt;/i&gt;&lt;br /&gt;&lt;i&gt;The daily hype is all around you. Microservices are a necessary step along the path to integration for a digitally successful future for your organization. The choices you’ve got to make don’t preclude the daily work of developing amazing applications. From containers, cloud, multicloud, and beyond, microservices are the core infrastructure ensuring your organization's flexibility in the digital world. Join us for an hour of power, where real life developer experiences are used to highlight the three top lessons we're all learning as we transition our integration infrastructure into modern day microservices.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/il9s8WJYqho?start=8" width="560"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Thanks again if you attended and feel free to reach out via this sites contact form if you have any questions or comments.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=lzgWGtMnXts:ndSF8m3Dvyw:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=lzgWGtMnXts:ndSF8m3Dvyw:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=lzgWGtMnXts:ndSF8m3Dvyw:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=lzgWGtMnXts:ndSF8m3Dvyw:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/lzgWGtMnXts" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5dnxBjwH1vM" height="1" width="1" alt=""/&gt;</content><summary>Back in August I spent a week at DevConf.US talking about microservices, specifically about the 3 pitfalls everyone ignores with microservices. If you follow the link back to that story you'll get the slides used. While slides are often nice, there is nothing like being in the room to experience the real story telling around microservice pitfalls. Many are unable to attend specific events so it's ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-10-10T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/lzgWGtMnXts/3-pitfalls-everyone-ignores-with-microservices-video.html</feedburner:origLink></entry><entry><title>This Week in JBoss, 9th October 2019 - Cloud native with Quarkus and Camel 3 coming up!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/wtKh3gRf-EU/this-week-in-jboss-9th-october-2019-cloud-native-with-quarkus-and-camel-3-coming-up" /><category term="Camel" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="event-driven" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="narayana" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_9th_october_2019_cloud_native_with_quarkus_and_camel_3_coming_up</id><updated>2019-10-09T15:58:32Z</updated><published>2019-10-09T15:58:32Z</published><content type="html">&lt;!-- [DocumentBodyStart:22d004ab-8c86-4bf0-840a-eefed3b443ba] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;&lt;em&gt;Welcome back to this new installment of the JBoss Weekly Editorial! It's been almost a month since the last one, so obviously, a lot as happens, but you'll try to catch you up as much as we can. There was a lot activity in many projects of the JBoss ecosystem, but this editorial puts the focus on Quarkus, still our newest baby, and Camel, reaching its version 3 very soon!&lt;br/&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;Camel 3.0&lt;/h1&gt;&lt;p&gt;&lt;img alt="Apache Camel Logo" class="image-1 jive-image" style="height: auto; display: block; margin-left: auto; margin-right: auto;"/&gt;Apache Camel is thriving projects that have been around quite a while now. So it's not surprising that &lt;a class="jive-link-external-small" href="http://www.davsclaus.com/2019/10/apache-camel-3-is-only-2-months-away.html" rel="nofollow"&gt;Apache Camel 3 is only 2 months away&lt;/a&gt;! To be ready for it, maybe you want to brush up on your Camel skills by following &lt;a class="jive-link-external-small" href="http://www.davsclaus.com/2019/10/upcoming-webinar-integration-patterns.html" rel="nofollow"&gt;"Riding the Apache Camel", an Upcoming Webinar focusing on Integration Patterns in a Serverless World&lt;/a&gt;?&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;If you are a user of CodeMirror, you will be very happy about&amp;#160; &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/02/apache-camel-language-support-in-codemirror/" rel="nofollow"&gt;Apache Camel Language support in CodeMirror. &lt;/a&gt;If you are more into Visual Studio, then look at this cool tutorial on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/30/sending-a-telegram-with-apache-camel-k-and-visual-studio-code/" rel="nofollow"&gt;Sending a telegram with Apache Camel K and Visual Studio Code&lt;/a&gt;. Either way, you'll have something Camelee to play with!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;Quarkus&lt;/h1&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a href="https://external-preview.redd.it/LlOeC4yjwUmUEHi62gxfFYlvpnIzDHffS0bO62QpOTg.jpg?auto=webp&amp;amp;s=e326e542fccf83ecf604ddc6973059b4878de438"&gt;&lt;img alt="Quarkus Banner" class="image-2 jive-image" src="https://external-preview.redd.it/LlOeC4yjwUmUEHi62gxfFYlvpnIzDHffS0bO62QpOTg.jpg?auto=webp&amp;amp;s=e326e542fccf83ecf604ddc6973059b4878de438" style="width: 620px; height: 351px; display: block; margin-left: auto; margin-right: auto;"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Quarkus has been released only a few months and its launch has triggered a lot of integration projects along with demo apps and workshops. Some of the content released, focuses on high-level architectural considerations.&amp;#160; Such as the article released by&amp;#160; Narayana team&amp;#160; on&lt;a class="jive-link-external-small" href="http://jbossts.blogspot.com/2019/10/software-transactional-memory-with.html" rel="nofollow"&gt; Software Transactional Memory with Quarkus&lt;/a&gt; or this other one focused on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/23/devnation-live-event-driven-business-automation-powered-by-cloud-native-java/" rel="nofollow"&gt;Event-driven business automation powered by cloud-native Java &lt;/a&gt;. Some tutorial, more focused on practical problems, were also released during the last week. Noteworthy is the one on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/" rel="nofollow"&gt;How the new Quarkus extension for Visual Studio Code improves the development experience &lt;/a&gt;and the one on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/02/autowire-microprofile-into-spring-with-quarkus/" rel="nofollow"&gt;Autowire MicroProfile into Spring with Quarkus&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;Evangelist's Corner&lt;/h1&gt;&lt;p&gt;As always, our very own Eric D. Schabell has been quite prolific in the last weeks. He released his workshop delivered during the &lt;a class="jive-link-external-small" href="https://www.schabell.org/2019/10/devopsdays-raleigh-2019-creating-real-devops-heroes-workshop.html" rel="nofollow"&gt;DevOpsDays Raleigh 2019 - Creating Real DevOps Heroes (workshop)&lt;/a&gt; along with &lt;a class="jive-link-external-small" href="https://www.schabell.org/2019/10/getting-started-with-cloud-native-development-on-openshift-container-platform.html" rel="nofollow"&gt;Getting Started with Cloud Native Development on OpenShift Container Platform (webinar)&lt;/a&gt;. Last, but not the least, he will also deliver a presentation during &lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/09/red-hat-forum-poland-keynote-and-journey-through-3-pitfalls.html" rel="nofollow"&gt;Red Hat Forum Poland - Keynote and a Journey Through 3 Pitfalls&lt;/a&gt; in November. If you are anywhere nearby Warsaw, in Poland, go check it out!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;Techbytes&lt;/h1&gt;&lt;p&gt;With more than three weeks with an editorial, it&amp;#8217;s no surprise that there is a lot of content to check out. Let&amp;#8217;s start first by this intriguing &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/01/introduction-to-microservices-observability-with-eclipse-microprofile/#error=login_required&amp;amp;state=104ef855-b208-4fdf-9bbf-260b10ca5568" rel="nofollow"&gt;Introduction to microservices observability with Eclipse MicroProfile &lt;/a&gt;. Once you are be done with this one, maybe you will like to look into even more esoteric discussion &lt;span aria-label="Happy" class="emoticon_happy emoticon-inline" style="height:16px;width:16px;"&gt;&lt;/span&gt; with this article on&lt;a class="jive-link-external-small" href="http://jbossts.blogspot.com/2019/09/heuristic-exceptions.html" rel="nofollow"&gt; Heuristic exceptions&lt;/a&gt;. Assuming those two have not yet quench your thirst, you may have two in-depth articles on Kogito coming your way. First is an &lt;a class="jive-link-external-small" href="http://kverlaen.blogspot.com/2019/09/an-intro-to-kogito.html" rel="nofollow"&gt;intro to Kogito&lt;/a&gt;, to get you well situated, and then we will dvelve into the&lt;a class="jive-link-external-small" href="http://kverlaen.blogspot.com/2019/09/etymology-of-kogito.html" rel="nofollow"&gt; Etymology of Kogito.&lt;/a&gt;. Pretty neat, isn't it?&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;OpenShift&lt;/h1&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;OpenShift is awesome some platform for developers to deploy and experiment with products (and also, of course, for production). The JBoss ecosystem is, of course, no stranger to it and thus there was quite a handful of content published about it in the last weeks. Let's start here with a tutorial on how to &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/03/deploy-red-hat-amq-streams-and-fuse-on-openshift-container-platform-4/" rel="nofollow"&gt;Deploy Red Hat AMQ Streams and Fuse on OpenShift Container Platform 4&lt;/a&gt;. If you want more about AMQ, you may follow up with this other tutorial on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/" rel="nofollow"&gt;4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift &lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;If you want to explore more in depth the infrastructure behind OpenShift, you can start by following this tutorial on how to &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/07/write-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client/" rel="nofollow"&gt;write a simple Kubernetes Operator in Java using the Fabric8 Kubernetes Client &lt;/a&gt;. Along those lines, the following article on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/20/using-red-hat-openshift-image-streams-with-kubernetes-deployments/" rel="nofollow"&gt;Using Red Hat OpenShift image streams with Kubernetes deployments &lt;/a&gt;might also be in your interest.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;em&gt;That's all for this week's edition of the Editorial, please join us next time as we continue our journey through the JBoss Communities in search of interesting articles and news. &lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:22d004ab-8c86-4bf0-840a-eefed3b443ba] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/wtKh3gRf-EU" height="1" width="1" alt=""/&gt;</content><summary>Welcome back to this new installment of the JBoss Weekly Editorial! It's been almost a month since the last one, so obviously, a lot as happens, but you'll try to catch you up as much as we can. There was a lot activity in many projects of the JBoss ecosystem, but this editorial puts the focus on Quarkus, still our newest baby, and Camel, reaching its version 3 very soon!   Camel 3.0 Apache Camel ...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2019-10-09T15:58:32Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/10/09/this-week-in-jboss-9th-october-2019-cloud-native-with-quarkus-and-camel-3-coming-up</feedburner:origLink></entry><entry><title>How to configure Red Hat OpenShift 4 to use Auth0</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/RD4GynQWRao/" /><category term="Kubernetes" /><category term="OpenShift" /><category term="Red Hat OpenShift Container Platform" /><category term="Cluster" /><author><name>Rarm Nagalingam</name></author><id>https://developers.redhat.com/blog/?p=634797</id><updated>2019-10-09T07:00:56Z</updated><published>2019-10-09T07:00:56Z</published><content type="html">&lt;p&gt;My colleague and I recently had to stand up a &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift 4&lt;/a&gt; cluster for a customer to determine how difficult it would be for them to port their application. Although they could have achieved a similar outcome with &lt;a href="https://developers.redhat.com/blog/2019/09/05/red-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers/"&gt;CodeReady Containers&lt;/a&gt;, their local development machines did not have enough resources (8GB RAM minimum, which is one problem of developing on tablets).&lt;/p&gt; &lt;p&gt;To reduce the overhead of adding and removing users from the project during the trial, we decided to skip over the simple HTPasswd provider and use the OAuth provider backed by Auth0. We also wanted to publish our guide to make it easier for others to adopt a similar deployment.&lt;span id="more-634797"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;This article outlines how to configure Red Hat OpenShift 4.x to use Auth0 as an OAuth2 provider. It assumes you already have a running OpenShift cluster and an Auth0 account.&lt;/p&gt; &lt;h2&gt;Auth0 steps&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Log in to the Auth0 management console.&lt;/li&gt; &lt;li&gt;Select &lt;em&gt;Applications&lt;/em&gt; from the side menu.&lt;/li&gt; &lt;li&gt;Select &lt;em&gt;Create&lt;/em&gt; application and choose &lt;em&gt;Regular Web Applications&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Click settings: &lt;ul&gt; &lt;li&gt;Record the client secret.&lt;/li&gt; &lt;li&gt;Record the client id.&lt;/li&gt; &lt;li&gt;Record the domain.&lt;/li&gt; &lt;li&gt;Set the callback URL of your OpenShift Cluster. The name at the end is named you provide the identity provider in OpenShift, then click submit. For example: https://oauth-openshift.apps.ocp.example.com/oath2callback/auth0&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Example&lt;/h3&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-634987 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/auth0-1024x674.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/auth0.gif" alt="" width="1024" height="674" /&gt;&lt;/p&gt; &lt;h3&gt;OpenShift steps&lt;/h3&gt; &lt;p&gt;Now you can configure Red Hat OpenShift:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Log in to OpenShift with the &lt;strong&gt;kubeadmin&lt;/strong&gt; account.&lt;/li&gt; &lt;li&gt;Select &lt;em&gt;Administration &amp;#62; Cluster Settings&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Select &lt;em&gt;Global Configuration &amp;#62; Oauth.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;Scroll down to &lt;em&gt;Identity Providers&lt;/em&gt; and select &lt;em&gt;Add &amp;#62; OpenID Connect&lt;/em&gt;&lt;/li&gt; &lt;li&gt;Complete the form as follows. If you change the name make sure you update the callback within Auth0: &lt;ul&gt; &lt;li&gt;name: auth0&lt;/li&gt; &lt;li&gt;Client ID: &amp;#60;your client id&amp;#62;&lt;/li&gt; &lt;li&gt;Client Secret: &amp;#60;your client seceret&amp;#62;&lt;/li&gt; &lt;li&gt;Issuer URL: &amp;#60;your domain for auth0 &amp;#8211; e.g. https://ocpdemo.au.auth0.com&amp;#62;&lt;/li&gt; &lt;li&gt;Preferred Username: email&lt;/li&gt; &lt;li&gt;Name: nickname&lt;/li&gt; &lt;li&gt;Email: email&lt;/li&gt; &lt;li&gt;Extra Scopes: email, profile, nickname&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Click Add&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Now when you browse to the OpenShift login page, you will see Auth0 as a login provider.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-634847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-1024x542.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-1024x542.png" alt="" width="640" height="339" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-1024x542.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-300x159.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-768x407.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login.png 1548w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;Thank you to James Ryles for helping with this configuration.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#038;title=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" data-a2a-url="https://developers.redhat.com/blog/2019/10/09/how-to-configure-red-hat-openshift-4-to-use-auth0/" data-a2a-title="How to configure Red Hat OpenShift 4 to use Auth0"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/09/how-to-configure-red-hat-openshift-4-to-use-auth0/"&gt;How to configure Red Hat OpenShift 4 to use Auth0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/RD4GynQWRao" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;My colleague and I recently had to stand up a Red Hat OpenShift 4 cluster for a customer to determine how difficult it would be for them to port their application. Although they could have achieved a similar outcome with CodeReady Containers, their local development machines did not have enough resources (8GB RAM minimum, which [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/09/how-to-configure-red-hat-openshift-4-to-use-auth0/"&gt;How to configure Red Hat OpenShift 4 to use Auth0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">634797</post-id><dc:creator>Rarm Nagalingam</dc:creator><dc:date>2019-10-09T07:00:56Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/09/how-to-configure-red-hat-openshift-4-to-use-auth0/</feedburner:origLink></entry><entry><title>What is Red Hat Universal Base Image?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/j2-Fe_M5SJQ/" /><category term="Red Hat Enterprise Linux" /><category term="Universal Base Images (UBI)" /><category term="UBI" /><author><name>Scott McCarty (fatherlinux)</name></author><id>https://developers.redhat.com/blog/?p=636067</id><updated>2019-10-09T07:00:32Z</updated><published>2019-10-09T07:00:32Z</published><content type="html">&lt;p&gt;Back in May, we &lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image"&gt;launched the Red Hat Universal Base Image (UBI)&lt;/a&gt;, targeted at developers building containerized applications for the cloud. Since then, we have published an &lt;a href="https://developers.redhat.com/articles/ubi-faq/#resources"&gt;extensive FAQ&lt;/a&gt; covering topics ranging from how often UBI is updated, to how the end user license agreement (EULA) allows you to redistribute applications built on it. These are all great fundamental topics to cover, but people still seem to have a lot of questions around what UBI is and what it isn’t.&lt;/p&gt; &lt;p&gt;If you are a developer and you are trying to figure out whether UBI is right for you, it might be easier to start by first explaining what it isn’t. Red Hat Universal Base Image is:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Not free Red Hat Enterprise Linux (RHEL).&lt;/strong&gt; You should not build your application on a RHEL base image first, then try and move it to UBI and expect it to work. That’s an anti-pattern.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Not a replacement for Fedora.&lt;/strong&gt; UBI is not a place to drive new operating system development or a platform on which to develop new packages for RHEL.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Not a replacement for CentOS.&lt;/strong&gt; UBI is RHEL. It’s not a downstream rebuild. When it runs on RHEL, or CoreOS (in &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;), it is supported as RHEL.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Now, let’s talk about what UBI is:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;A vehicle for building and delivering certified containers and operators.&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Use case based.&lt;/strong&gt; UBI is targeted toward high-level application developers, programming in languages like .NET, Golang, Node.js, Perl, PHP, Python, and Ruby.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;High quality. &lt;/strong&gt; It has the same quality guarantees as Red Hat Enterprise Linux. UBI is released and patched on the RHEL schedule with RHEL. It’s tested by the same performance, security and quality teams as RHEL.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Redistributable under a different end user license agreement (EULA) than traditional RHEL.&lt;/strong&gt; Traditional RHEL packages (RPMs) and container images have been restricted by the RHEL EULA.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Vehicle for building and delivering certified containers and 0perators&lt;/h2&gt; &lt;p&gt;UBI makes it easy for ISVs to build and deliver certified container images for RHEL and certified &lt;a href="https://www.openshift.com/learn/topics/operators"&gt;Operators&lt;/a&gt; for OpenShift. This is a key value proposition for customers that want joint support from both the software vendor and the container platform vendor.&lt;/p&gt; &lt;p&gt;UBI frees developers to work with high-quality container images on their laptops, desktops, and CI/CD systems, even if they don’t run RHEL or OpenShift. This also allows ISVs and Red Hat partners to redistribute their applications on UBI. When the application lands on a supported environment (RHEL or OpenShift), Red Hat will support it. If you are a Red Hat ISV partner, and are looking for a way to deliver higher quality support to our joint customers, check out the &lt;a href="https://connect.redhat.com/"&gt;Partner Connect Program&lt;/a&gt;; it’s free.&lt;/p&gt; &lt;h2&gt;Use case based: UBI is for containerized cloud-native applications&lt;/h2&gt; &lt;p&gt;As mentioned earlier, UBI should not be thought of as free Red Hat Enterprise Linux. UBI is targeted for specific use cases, not the wide variety of use cases that RHEL  can address. Today, the UBI use cases include developers looking to develop containerized, cloud-native applications based on popular languages like .NET, Golang, Node.js, Perl, PHP, Python, and Ruby.&lt;/p&gt; &lt;p&gt;We are taking a hard look at expanding to a few other use cases including C/C++ development, container image builders, and RPM package builders, but today, it’s only designed for cloud-native application development, and should not be treated as free RHEL or a replacement for CentOS.&lt;/p&gt; &lt;h2&gt;High quality: The security and operational benefits of RHEL&lt;/h2&gt; &lt;p&gt;If you want to get to production faster, build on high-quality base images. Building on UBI is like building on RHEL so you will spend less time convincing security teams and operations teams that the random image you chose off of the internet is secure. See also: &lt;a href="https://developers.redhat.com/blog/2016/05/18/3-reasons-i-should-build-my-containerized-applications-on-rhel-and-openshift/"&gt;3 Reasons I Should Build My Containerized Applications on RHEL and OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Since UBI is Red Hat Enterprise Linux, it follows the same &lt;a href="https://access.redhat.com/support/policy/updates/ubi"&gt;enterprise content availability&lt;/a&gt; schedule as RHEL. This means that you can build your containerized application on UBI, manage it with CI/CD based builds, and continue to receive updates for the packages in UBI for the same lifecycle as RHEL. Stated another way, you can focus on your application, instead of fixing packages in the underlying container image. Fewer CI/CD testing faults means more time to focus on new projects.&lt;/p&gt; &lt;h2&gt;Redistributable&lt;/h2&gt; &lt;p&gt;Red Hat Enterprise Linux has always had an end user license agreement that prevented users who signed it from redistributing RHEL. This extended to the RPMs in RHEL, and the container images. This EULA was necessary to govern the relationship between Red Hat and it’s customers. This ensured that customers had a subscription for every active RHEL server allowing Red Hat support to quickly provide customers with help if they needed it. This worked well in traditional server environments, where companies typically measure support by installed servers.&lt;/p&gt; &lt;p&gt;UBI has a different end user license agreement (EULA) than RHEL. This means that users can pull it down, build an application on it, open source or proprietary, and redistribute that application wherever and however they want.  When that UBI images lands on RHEL or OpenShift, it is supported just like RHEL. The entitlement for UBI comes from the host, not the container image. This works well in cloud-based environments, and developer environments where containers are not always run on supported container hosts (e.g., CI/CD services, etc).&lt;/p&gt; &lt;h2&gt;Check out Red Hat Universal Base Image&lt;/h2&gt; &lt;p&gt;If you are building new applications, you should check out Red Hat Universal Base Image. It can be thought of as a use-case based, redistributable version of RHEL. This gives you all of the advantages of a RHEL base image, without the EULA restrictions on redistribution.&lt;/p&gt; &lt;p&gt;Check out all of the UBI based images that are available on the &lt;a href="https://access.redhat.com/containers/#/product/5c180b28bed8bd75a2c29a63"&gt;UBI Product Page&lt;/a&gt; on the Red Hat Container Catalog. Download a trusted image from a trusted source.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#038;title=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" data-a2a-url="https://developers.redhat.com/blog/2019/10/09/what-is-red-hat-universal-base-image/" data-a2a-title="What is Red Hat Universal Base Image?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/09/what-is-red-hat-universal-base-image/"&gt;What is Red Hat Universal Base Image?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/j2-Fe_M5SJQ" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Back in May, we launched the Red Hat Universal Base Image (UBI), targeted at developers building containerized applications for the cloud. Since then, we have published an extensive FAQ covering topics ranging from how often UBI is updated, to how the end user license agreement (EULA) allows you to redistribute applications built on it. These [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/09/what-is-red-hat-universal-base-image/"&gt;What is Red Hat Universal Base Image?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">636067</post-id><dc:creator>Scott McCarty (fatherlinux)</dc:creator><dc:date>2019-10-09T07:00:32Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/09/what-is-red-hat-universal-base-image/</feedburner:origLink></entry><entry><title>DevNation Live Bengaluru: Sail into cloud — An introduction to Istio</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hl60pgsUB7I/" /><category term="DevNation" /><category term="Kubernetes" /><category term="Service Mesh" /><category term="DevNation Live" /><category term="istio" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=623707</id><updated>2019-10-08T07:00:29Z</updated><published>2019-10-08T07:00:29Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p&gt;In this session, &lt;a href="https://developers.redhat.com/blog/author/kameshsampath/"&gt;Kamesh Sampath&lt;/a&gt; provides an overview of Envoy and &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio&lt;/a&gt;, two open source projects that will change the way you write cloud-native Java applications on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. We&amp;#8217;ll show how to download and set up Istio on your local laptop, then deploy Java microservices as part of the &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio service mesh&lt;/a&gt; with Istio sidecar proxy.&lt;span id="more-623707"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/jApuDhvsG_Q" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us at an upcoming&lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt; &lt;span style="font-weight: 400;"&gt;developer event&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and see our collection of&lt;/span&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; &lt;span style="font-weight: 400;"&gt;past DevNation Live tech talks&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#038;title=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" data-a2a-url="https://developers.redhat.com/blog/2019/10/08/devnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio/" data-a2a-title="DevNation Live Bengaluru: Sail into cloud — An introduction to Istio"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/08/devnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio/"&gt;DevNation Live Bengaluru: Sail into cloud — An introduction to Istio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hl60pgsUB7I" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. In this session, Kamesh Sampath provides an overview of Envoy and Istio, two open source projects that will change the way you write cloud-native Java [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/08/devnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio/"&gt;DevNation Live Bengaluru: Sail into cloud — An introduction to Istio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">623707</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-10-08T07:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/08/devnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio/</feedburner:origLink></entry></feed>
